start: [paragraph (_NEWLINE paragraph)*]
paragraph: keyword_abilities reminder?
         | prefix? sentence+ reminder?
         | level
         | level_pt
         | reminder

prefix: loyalty_cost | "•" | ("I"+ "—")
loyalty_cost: /\[[+−]?(?:X|\d+)\]:/
reminder: /\([^)]+\)/
keyword_ability: WORD+ "—"? (WORD | SYMBOL)* (("or" | "and/or") SYMBOL+)?
keyword_abilities: keyword_ability (/[,;]/ keyword_ability)*
level: "LEVEL" ((INT "-" INT) | (INT "+"))
level_pt: power_toughness

text.-1: "would create"
       | "Whenever you create"
       | WORD
       | SYMBOL 
       | PT_MODIFIER 
       | reminder 
       | /[\/:,!]/ 
       | /"/ text+ /"/ 
       | /(?<!\w)'/ text+ /'/

sentence: text* /creates?/i create text* "."? sentence_following_create?
        | text+ ("—" | "." | /"/ sentence+ /"/ | /(?<!\w)'/ sentence+ /'/)?

create: quantity "tapped"? power_toughness colors SUBTYPE+ TYPE+ /tokens?/ [with | named | with named | named with]
      | legendary_name power_toughness colors SUBTYPE+ TYPE+ /tokens?/ with?
      | quantity power_toughness TYPE+ /tokens?/
      | quantity power_toughness SUBTYPE+ TYPE+ /tokens?/ that_are_colors
      | quantity colors SUBTYPE+ TYPE+ /tokens?/ [named | with | named with]
      | quantity colors TYPE+ /tokens?/ named? with
      | quantity colors SNOW TYPE+ /tokens?/ named with      
      | quantity PREDEFINED_TOKEN /tokens?/ "," quantity PREDEFINED_TOKEN /tokens?/ ", and" quantity PREDEFINED_TOKEN /tokens?/
      | quantity PREDEFINED_TOKEN /tokens?/ "or" quantity PREDEFINED_TOKEN /tokens?/
      | quantity PREDEFINED_TOKEN /tokens?/
      | quantity "tapped"? /tokens?/ ("that's a copy" | "that are copies")
      | quantity "of those tokens"
      | "one of each"
      | "a copy"
      
sentence_following_create: ("It has" | "They have" | "Those creatures have") rules
                         | ("It has" | "They each have") KEYWORD "and" rules
                         | "The token has" KEYWORD "and" KEYWORD "."
                         | "It has" KEYWORD "," rules "and" KEYWORD "."

quantity: WORD | "that many" | "a number of" | "twice X"

LEGENDARY_NAME: /[A-Z][\w\s,]+(?=, a legendary)/
legendary_name: LEGENDARY_NAME ", a" LEGENDARY

TOKEN_NAME: CAP_WORD ((" " WORD)* " " CAP_WORD)*
named: "named" TOKEN_NAME

LEGENDARY: "legendary"
SNOW: "snow"

power_toughness: POWER "/" TOUGHNESS
POWER: INT | "X"
TOUGHNESS: INT | "X"

colors: COLOR | COLOR "and" COLOR | COLOR "," COLOR ", and" COLOR
COLOR: "white" | "blue" | "black" | "red" | "green" | "colorless"
ALL_COLORS: "all colors"
that_are_colors: ("that are" | "that's") (ALL_COLORS | COLOR "," COLOR ", and" COLOR) // Hazezon Tamar; Godsire

SUBTYPE: CAP_WORD
TYPE: "creature" | "artifact" | "enchantment" | "land" | "planeswalker"

with: "with" (KEYWORD ["and" (KEYWORD | rules)] | rules ["and" KEYWORD] | "those characteristics")
rules: /"/ RULES_TEXT /"/ | /(?<!\w)'/ INNER_RULES_TEXT /'/
RULES_TEXT: /[^"]+/
INNER_RULES_TEXT: /[^']+/

PREDEFINED_TOKEN: "Food" | "Clue" | "Treasure" | "Shard" | "Gold" | "Walker"

SYMBOL: "{CHAOS}" | /\[[+-]\d+\]/ | /{[WUBRGCSXTEPQ]}/ | /{\d+}/ | /{[WUBRG2]\/[WUBRGP]}/
PT_MODIFIER: /[+-]\w+\/[+-]\w+/

KEYWORD: "protection from " COLOR
       | "defender"
       | "flying"
       | "haste"
       | "trample"
       | "reach"
       | "first strike"
       | "lifelink"
       | "deathtouch"
       | "menace"
       | "equip " SYMBOL
       | "indestructible"
       | "exalted"
       | "enchant permanent"
       | "totem armor"
       | "forestwalk"
       | "vigilance"
       | "changeling"
CAP_WORD: /[A-Z][\w\-']+/
WORD: /(?!create\b)[\w\-']+/i

%import common.INT
%import common.NEWLINE -> _NEWLINE
%import common.WS_INLINE
%ignore WS_INLINE